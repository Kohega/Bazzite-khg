# Define build arguments with default values
ARG IMAGE_VARIANT="default"
ARG BASE_IMAGE="ghcr.io/ublue-os/bazzite:stable"

# Allow build scripts to be referenced without being copied into the final image
FROM scratch AS ctx
COPY build_files /build_files

FROM ${BASE_IMAGE} AS base
# Bazzite base
RUN --mount=type=cache,dst=/var/cache \
    --mount=type=cache,dst=/var/log \
    --mount=type=bind,from=ctx,source=/,target=/ctx \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=secret,id=GITHUB_TOKEN \

RUN rm /usr/share/ublue-os/bazzite/flatpak/install
RUN mkdir -p /data /videos /games
COPY system_files /

RUN --mount=type=bind,from=ctx,source=/,target=/ctx \
    --mount=type=cache,dst=/var/cache \
    --mount=type=cache,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    /ctx/build.sh && \
    


# Enable Copr repos
RUN log "Enable Copr repos" && \
    dnf5 -y install dnf5-plugins && \
    for copr in \
        ilyaz/LACT \
        zliced13/YACR \
        atim/heroic-games-launcher \
        zeno/scrcpy \
        codifryed/CoolerControl \
    do \
        echo "Enabling copr: $copr"; \
        dnf5 -y copr enable $copr; \
        dnf5 -y config-manager setopt copr:copr.fedorainfracloud.org:${copr////:}.priority=98 ;\
    done && unset -v copr && \
    dnf5 -y install \
        https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm \
        https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm && \

# Install Apps
RUN dnf5 install --setopt=install_weak_deps=False --allowerasing --skip-unavailable --enable-repo="*rpmfusion*" -y \
        syncthing \
        filezilla \
        firefox \
        firefox-langpacks \
        lact \
        SDL2_ttf \
        SDL2_image \
        inih \
        heroic-games-launcher-bin \
        kodi \
        kodi-inputstream-adaptive \
        audacity \
        bleachbit \
        scrcpy \
        virt-manager \
        gh \
        qbittorrent \
        discord \
        coolercontrold
        usbmuxd

# Install KDE and GNOME apps
RUN if grep -q "bazzite" <<< "${BASE_IMAGE_NAME}"; then \
        dnf5 install --setopt=install_weak_deps=False --allowerasing --skip-unavailable --enable-repo="*rpmfusion*" -y \
            kcalc
            konsole
            kate
            krename
            haruna
            okular
            gwenview
            ark
            filelight
            kget
    ; else \
        dnf5 install --setopt=install_weak_deps=False --allowerasing --skip-unavailable --enable-repo="*rpmfusion*" -y \
            nemo \
            ulauncher \
            clapper \
            
# Install ZeroTier
RUN log "Starting ZeroTier installation" && \
    # Add ZeroTier GPG key
    curl -s https://raw.githubusercontent.com/zerotier/ZeroTierOne/master/doc/contact%40zerotier.com.gpg | tee /etc/pki/rpm-gpg/RPM-GPG-KEY-zerotier && \
    # Add ZeroTier repository
    cat << 'EOF' | tee /etc/yum.repos.d/zerotier.repo > /dev/null && \
[zerotier] \
name=ZeroTier, Inc. RPM Release Repository \
baseurl=http://download.zerotier.com/redhat/fc/42 \
enabled=1 \
gpgcheck=0 \
EOF \
    # Install ZeroTier
    dnf install -y zerotier-one && \
    # Remove the repo file after installation
    rm /etc/yum.repos.d/zerotier.repo -f && \
    log "ZeroTier installation completed"

# SELinux
RUN setsebool -P samba_enable_home_dirs=1
RUN setsebool -P domain_kernel_load_modules on

# Services
RUN systemctl enable podman.socket syncthing@kohega.service zerotier-one.service lactd.service smb.service
RUN echo "Adding personal just recipes" && \
    echo "import \"/usr/share/kohega/just/kohega.just\"" >> /usr/share/ublue-os/justfile

# Rebuild initramfs
RUN KERNEL_VERSION="$(dnf5 repoquery --installed --queryformat='%{evr}.%{arch}' kernel)" && \
    /usr/bin/dracut \
      --no-hostonly \
      --kver "$KERNEL_VERSION" \
      --reproducible \
      --zstd \
      -v \
      --add ostree \
      -f "/usr/lib/modules/$KERNEL_VERSION/initramfs.img" && \
    chmod 0600 "/usr/lib/modules/$KERNEL_VERSION/initramfs.img"

# Cleanup
RUN dnf5 clean all && \
    rm -rf /tmp/* && \
    find /var/* -maxdepth 0 -type d \! -name cache -exec rm -fr {} \; && \
    find /var/cache/* -maxdepth 0 -type d \! -name libdnf5 \! -name rpm-ostree -exec rm -fr {} \; && \
    mkdir -p /tmp && \
    mkdir -p /var/tmp && \
    chmod -R 1777 /var/tmp && \
    log "Cleanup completed"

RUN log "Build completed"

RUN ostree container commit

### LINTING
## Verify final image and contents are correct.
RUN bootc container lint